Agent:
    The build agent is configured to run in a Docker container using the node:16 Docker image.
    The argument -u root ensures that all commands are executed as the root user inside the container.

Environment:
    The SNYK_TOKEN environment variable is defined using the credentials function, which securely fetches the Snyk token from the Jenkins credentials store. This token is used for authenticating with Snyk to run security scans.

Stages:
    Install Dependencies:
        The project dependencies are installed using the command npm ci, which ensures a clean and faster installation based on the package-lock.json file.
        A message is displayed indicating the successful installation of dependencies.
    Run Tests:
        The project tests are executed using npm test.
        After the tests run, a message is displayed indicating their successful completion.
    Snyk Security Scan:
        The Snyk CLI is installed globally via npm install -g snyk.
        The Snyk tool is authenticated using the provided SNYK_TOKEN environment variable, ensuring the pipeline can perform the security scan.
        A Snyk security scan is run with the severity threshold set to "high" (snyk test --severity-threshold=high).
        The pipeline checks the exit status of the snyk test command. If vulnerabilities are found (non-zero status), the pipeline halts with an error message, indicating that critical vulnerabilities were detected.
        A message is displayed encouraging users to review for any critical vulnerabilities after the scan completes.

Post:
    The post block contains actions that execute after the pipeline stages, regardless of the outcome.
    always:
        This section always runs and displays a message indicating that the pipeline execution is complete.
    failure:
        If the pipeline fails (e.g., due to test failures or critical vulnerabilities), a message is displayed prompting users to review the logs for details.
